name: ci
on:
  push:

env:
  HUSKY: 0

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: pnpm/action-setup@v1.2.1
        with:
          version: 5.18.1
      - name: Set up protoc
        run: |
          curl -LO "https://github.com/protocolbuffers/protobuf/releases/download/v3.15.5/protoc-3.15.5-linux-x86_64.zip"
          unzip protoc-3.15.5-linux-x86_64.zip -d $HOME/.local
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - name: Install package dependencies
        run: |
          export PATH="$PATH:$HOME/.local/bin"
          pnpm install
      - name: Run check
        run: pnpm check

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: pnpm/action-setup@v1.2.1
        with:
          version: 5.18.1
      - name: Set up protoc
        run: |
          curl -LO "https://github.com/protocolbuffers/protobuf/releases/download/v3.15.5/protoc-3.15.5-linux-x86_64.zip"
          unzip protoc-3.15.5-linux-x86_64.zip -d $HOME/.local
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - name: Install package dependencies
        run: |
          export PATH="$PATH:$HOME/.local/bin"
          pnpm install
      - name: Run build
        run: pnpm build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs:
      - check
      - build
    #if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: provindevs
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - run: |
          gsutil rm -r gs://provindevs-frontend/* || true
          gsutil cp -r dist/* gs://provindevs-frontend/
